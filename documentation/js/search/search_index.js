var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.132,1,0.36]],["body/components/AppComponent.html",[0,0.227,1,0.65,2,0.785,3,0.528,4,0.443,5,0.821,6,0.821,7,0.821,8,0.821,9,0.443,10,2.752,11,0.821,12,1.35,13,0.868,14,3.494,15,1.042,16,4.741,17,1.042,18,4.315,19,0.528,20,1.042,21,2.802,22,0.998,23,0.908,24,4.315,25,0.528,26,0.049,27,1.203,28,1.362,29,1.362,30,2.227,31,2.954,32,3.494,33,0.528,34,0.443,35,0.528,36,0.528,37,0.821,38,1.042,39,1.042,40,0.821,41,1.205,42,0.821,43,0.785,44,0.821,45,0.443,46,0.528,47,1.145,48,0.443,49,0.528,50,0.443,51,0.528,52,0.443,53,0.528,54,0.821,55,0.443,56,0.715,57,0.821,58,0.443,59,0.774,60,0.443,61,1.042,62,0.443,63,0.821,64,0.443,65,0.528,66,0.821,67,0.443,68,0.443,69,0.443,70,0.618,71,0.715,72,0.821,73,0.821,74,0.037,75,0.037]],["title/modules/AppModule.html",[76,1.631,77,1.631]],["body/modules/AppModule.html",[0,0.192,1,0.689,2,0.629,3,0.379,4,0.319,9,0.319,13,0.537,26,0.05,33,0.876,34,0.319,35,0.379,36,0.379,45,0.623,46,0.379,48,0.623,49,0.379,50,0.623,51,0.379,52,0.641,53,0.379,55,0.623,56,0.514,58,0.623,59,0.677,60,0.451,62,0.641,64,0.623,65,0.537,67,0.623,68,0.451,69,0.641,70,0.793,74,0.03,75,0.03,77,3.329,78,1.785,79,2.043,80,1.979,81,1.979,82,1.979,83,1.979,84,2.467,85,2.8,86,1.979,87,1.444,88,2.444,89,3.457,90,2.8,91,3.457,92,2.8,93,3.457,94,2.8,95,1.673,96,2.444,97,2.444,98,2.8,99,2.043,100,1.261,101,2.043,102,4.012,103,0.673,104,1.979,105,3.457,106,2.444,107,1.979,108,3.457,109,2.444,110,3.457,111,2.444,112,3.457,113,2.444,114,3.457,115,2.444,116,2.444,117,3.457,118,0.673,119,3.457,120,0.979,121,0.979,122,3.457,123,2.444,124,3.457,125,2.444,126,3.457,127,2.444,128,3.457,129,1.979,130,3.457,131,1.979,132,1.979,133,1.785,134,2.8,135,1.673,136,2.444,137,1.673,138,2.444,139,1.673,140,2.444,141,1.444,142,3.249,143,1.444,144,1.444,145,1.444,146,1.979,147,1.673,148,2.444,149,2.444,150,2.8,151,2.444,152,2.444,153,1.673,154,2.444,155,4.362,156,0.979,157,1.673,158,2.444,159,2.444,160,2.444,161,2.444,162,2.444]],["title/modules/AppRoutingModule.html",[76,1.631,84,1.425]],["body/modules/AppRoutingModule.html",[3,0.648,4,0.545,9,0.545,26,0.049,33,0.76,34,0.545,35,0.648,36,0.648,74,0.042,75,0.042,78,2.156,84,2.526,90,3.382,92,3.963,98,3.963,99,3.067,100,2.156,153,2.859,163,4.177,164,4.177,165,4.177,166,4.177]],["title/components/DetailsDialogComponent.html",[0,0.132,45,0.36]],["body/components/DetailsDialogComponent.html",[0,0.214,1,0.393,2,0.725,3,0.467,4,0.393,5,0.727,6,0.727,7,0.727,8,0.727,9,0.393,11,0.727,12,1.329,13,0.854,15,0.964,17,0.964,19,0.467,20,0.964,21,1.779,22,0.84,23,0.942,25,0.619,26,0.049,33,0.619,34,0.393,35,0.467,36,0.619,37,0.727,38,0.964,39,0.964,40,0.727,41,1.15,42,0.727,43,0.814,44,0.727,45,0.621,46,0.829,47,1.081,48,0.393,49,0.467,50,0.393,51,0.467,52,0.393,53,0.739,54,0.727,55,0.393,56,0.634,57,0.727,58,0.393,59,0.739,60,0.393,61,0.964,62,0.393,63,0.727,64,0.393,65,0.467,66,0.727,67,0.393,68,0.393,69,0.393,70,0.548,71,0.634,72,0.727,73,0.727,74,0.034,75,0.034,118,0.829,144,2.814,167,3.857,168,1.779,169,0.964,170,1.232,171,1.247,172,3.062,173,2.731,174,1.081,175,1.803,176,0.964,177,1.312,178,1.779,179,3.011,180,0.727,181,0.727,182,3.011,183,0.727,184,1.099,185,1.779,186,2.357,187,3.011,188,2.731,189,1.811,190,3.231,191,1.554,192,1.779,193,0.727,194,1.779,195,2.439,196,3.989,197,3.231,198,1.811,199,2.061,200,1.779,201,1.367,202,3.011]],["title/components/DirectorDialogComponent.html",[0,0.132,48,0.36]],["body/components/DirectorDialogComponent.html",[0,0.215,1,0.395,2,0.728,3,0.47,4,0.395,5,0.732,6,0.732,7,0.732,8,0.732,9,0.395,11,0.732,12,1.33,13,0.855,15,0.967,17,0.967,19,0.47,20,0.967,22,0.843,23,0.944,25,0.622,26,0.049,33,0.622,34,0.395,35,0.47,36,0.622,37,0.732,38,0.967,39,0.967,40,0.732,41,1.153,42,0.732,43,0.868,44,0.732,45,0.395,46,0.622,47,1.084,48,0.623,49,0.838,50,0.395,51,0.47,52,0.395,53,0.696,54,0.732,55,0.395,56,0.638,57,0.732,58,0.395,59,0.741,60,0.395,61,0.967,62,0.395,63,0.732,64,0.395,65,0.47,66,0.732,67,0.395,68,0.395,69,0.395,70,0.551,71,0.638,72,0.732,73,0.732,74,0.034,75,0.034,118,0.834,143,2.821,168,1.79,169,0.967,170,1.236,171,1.252,172,3.071,173,2.741,174,1.084,175,1.806,176,0.967,177,1.315,178,1.79,180,0.732,181,0.732,183,0.732,184,1.103,185,1.79,186,2.367,188,2.741,189,1.818,191,1.564,192,1.79,193,0.732,198,1.375,200,1.79,201,1.375,203,3.866,204,2.453,205,2.453,206,2.453,207,3.243,208,2.453,209,3.243,210,3.029,211,2.453,212,3.029]],["title/injectables/FetchApiDataService.html",[213,1.631,214,0.978]],["body/injectables/FetchApiDataService.html",[3,0.22,4,0.185,9,0.185,13,0.355,14,1.15,19,0.22,21,1.353,22,0.606,23,1.015,25,0.657,26,0.05,27,1.37,30,0.733,33,0.512,34,0.185,35,0.22,36,0.447,43,0.85,46,0.355,49,0.562,51,0.562,53,0.786,59,0.814,60,0.43,68,0.375,74,0.02,75,0.02,76,1.353,101,1.353,103,1.414,104,1.15,153,3.44,156,1.631,157,1.97,174,0.935,175,1.819,176,0.553,180,1.023,181,1.023,183,1.287,191,1.182,194,1.353,213,1.353,214,0.811,215,1.42,216,3.34,217,0.972,218,1.854,219,3.301,220,3.87,221,2.29,222,2.673,223,3.301,224,3.301,225,3.301,226,3.301,227,3.301,228,1.854,229,1.854,230,2.29,231,2.29,232,1.42,233,4.373,234,1.42,235,4.071,236,2.29,237,2.29,238,3.301,239,2.33,240,1.568,241,2.29,242,2.877,243,2.29,244,1.42,245,2.287,246,3.849,247,5.221,248,5.245,249,2.29,250,1.42,251,3.134,252,3.681,253,4.82,254,1.998,255,2.29,256,2.139,257,1.752,258,1.42,259,2.29,260,2.29,261,2.29,262,2.877,263,1.42,264,3.301,265,1.42,266,1.42,267,1.42,268,2.33,269,1.42,270,2.29,271,3.301,272,1.42,273,1.353,274,2.29,275,2.29,276,3.301,277,2.877,278,2.29,279,1.42,280,2.29,281,1.42,282,2.139,283,4.373,284,2.29,285,1.42,286,2.29,287,1.353,288,2.29,289,1.42,290,1.353,291,2.29,292,4.49,293,2.29,294,1.15,295,1.42,296,1.42,297,1.42,298,1.42,299,1.42,300,0.972,301,1.15,302,1.42,303,1.42,304,2.877,305,2.899,306,1.42,307,3.253,308,2.877,309,1.42,310,4.59,311,3.073,312,1.42,313,1.42,314,1.42,315,1.42,316,3.301,317,1.42,318,4.49,319,4.373,320,3.62,321,4.373,322,4.373,323,4.373,324,4.373,325,1.42,326,1.42,327,1.42,328,1.42,329,0.839,330,2.932,331,2.877,332,1.42,333,2.29,334,2.29,335,1.42,336,1.42,337,1.42,338,1.42,339,1.42,340,1.42,341,1.42,342,1.854,343,1.15,344,1.42,345,1.42,346,1.42,347,1.42]],["title/components/GenreDialogComponent.html",[0,0.132,50,0.36]],["body/components/GenreDialogComponent.html",[0,0.214,1,0.393,2,0.726,3,0.468,4,0.393,5,0.728,6,0.728,7,0.728,8,0.728,9,0.393,11,0.728,12,1.329,13,0.854,15,0.965,17,0.965,19,0.468,20,0.965,22,0.841,23,0.942,25,0.62,26,0.049,33,0.62,34,0.393,35,0.468,36,0.62,37,0.728,38,0.965,39,0.965,40,0.728,41,1.151,42,0.728,43,0.867,44,0.728,45,0.393,46,0.62,47,1.081,48,0.393,49,0.468,50,0.621,51,0.837,52,0.393,53,0.695,54,0.728,55,0.393,56,0.635,57,0.728,58,0.393,59,0.74,60,0.393,61,0.965,62,0.393,63,0.728,64,0.393,65,0.468,66,0.728,67,0.393,68,0.393,69,0.393,70,0.548,71,0.635,72,0.728,73,0.728,74,0.034,75,0.034,118,0.831,141,2.816,168,1.782,169,0.965,170,1.233,171,1.249,172,3.064,173,2.733,174,1.081,175,1.804,176,0.965,177,1.313,178,1.782,180,0.728,181,0.728,183,0.728,184,1.1,185,1.782,186,2.36,188,2.733,189,1.813,191,1.557,192,1.782,193,0.728,194,1.782,197,3.234,198,1.813,200,1.782,201,1.369,204,2.442,205,2.442,206,2.442,209,3.234,211,2.442,348,3.859,349,3.234,350,1.782,351,3.016]],["title/components/MovieCardComponent.html",[0,0.132,52,0.36]],["body/components/MovieCardComponent.html",[0,0.199,1,0.195,2,0.435,3,0.371,4,0.195,5,0.362,6,0.362,7,0.362,8,0.362,9,0.195,11,0.362,12,1.164,13,0.748,15,0.577,17,0.577,19,0.232,20,0.577,21,3,22,0.503,23,1.04,25,0.736,26,0.05,27,1.921,28,0.958,29,0.958,31,1.025,33,0.646,34,0.195,35,0.232,36,0.371,37,0.362,38,0.577,39,0.577,40,0.362,41,0.822,42,0.362,43,0.942,44,0.362,45,0.312,46,0.577,47,0.72,48,0.312,49,0.758,50,0.312,51,0.758,52,0.444,53,0.842,54,0.362,55,0.195,56,0.315,57,0.362,58,0.195,59,0.736,60,0.195,61,0.577,62,0.195,63,0.362,64,0.195,65,0.232,66,0.362,67,0.195,68,0.195,69,0.195,70,0.272,71,0.315,72,0.362,73,0.362,74,0.02,75,0.02,101,1.412,103,0.821,118,0.412,120,0.6,121,0.6,135,3.416,141,0.885,142,2.414,143,0.885,144,0.885,156,1.666,169,0.577,170,0.821,171,1.526,174,1.075,175,1.403,176,0.577,177,0.937,180,1.005,181,1.005,183,1.146,184,1.374,189,1.354,190,1.935,193,0.362,194,3.079,195,3.497,200,0.885,201,0.68,207,1.935,208,3.497,214,1.317,218,1.935,222,1.935,228,1.935,245,3.023,246,4.041,257,1.364,305,3.247,307,2.956,329,1.412,342,1.935,349,1.935,352,4.041,353,1.213,354,2.981,355,2.39,356,1.757,357,1.688,358,2.39,359,2.756,360,3.403,361,2.39,362,2.39,363,0.885,364,2.545,365,1.688,366,2.39,367,2.39,368,1.498,369,3.842,370,3.403,371,4.318,372,1.498,373,1.539,374,1.498,375,2.39,376,1.498,377,2.39,378,1.498,379,3.963,380,2.756,381,2.713,382,3.497,383,2.39,384,1.498,385,2.39,386,1.498,387,2.39,388,1.498,389,1.935,390,2.39,391,1.498,392,1.919,393,2.39,394,2.39,395,1.762,396,1.498,397,1.498,398,1.498,399,1.636,400,2.39,401,2.39,402,1.498,403,0.773,404,1.498,405,1.213,406,1.498,407,1.498,408,1.213,409,1.498,410,1.213,411,1.935,412,1.213,413,1.498,414,1.935,415,1.213,416,3.209,417,2.981,418,1.498,419,1.498,420,1.233,421,2.39,422,1.498,423,1.085,424,1.085,425,1.412,426,1.498,427,1.498,428,1.498,429,1.498,430,2.414,431,1.498,432,1.498,433,2.39,434,2.39,435,1.025,436,1.498,437,1.213,438,1.498,439,1.498]],["title/components/NavBarComponent.html",[0,0.132,55,0.36]],["body/components/NavBarComponent.html",[0,0.206,1,0.364,2,0.69,3,0.434,4,0.364,5,0.675,6,0.675,7,0.675,8,0.675,9,0.364,11,0.675,12,1.314,13,0.845,15,0.917,17,0.917,19,0.434,20,0.917,22,0.799,23,0.973,25,0.589,26,0.049,30,1.959,33,0.669,34,0.364,35,0.434,36,0.589,37,0.675,38,0.917,39,0.917,40,0.675,41,1.116,42,0.675,43,0.783,44,0.675,45,0.364,46,0.434,47,1.041,48,0.364,49,0.434,50,0.364,51,0.434,52,0.364,53,0.434,54,0.675,55,0.603,56,1.092,57,0.675,58,0.364,59,0.825,60,0.364,61,0.917,62,0.364,63,0.675,64,0.364,65,0.717,66,0.675,67,0.364,68,0.364,69,0.364,70,0.508,71,0.588,72,0.675,73,0.675,74,0.032,75,0.032,87,2.242,120,1.12,121,1.852,147,3.307,156,1.726,169,0.917,170,1.187,174,1.041,176,0.917,177,1.273,180,0.675,181,0.675,183,0.917,184,1.187,193,0.675,199,1.913,252,1.913,357,2.098,365,2.194,389,2.263,414,2.263,420,1.443,423,1.269,424,1.269,425,1.652,440,3.913,441,2.263,442,4.309,443,3.795,444,4.621,445,2.795,446,2.795,447,2.795,448,2.795,449,3.795,450,3.795,451,2.795,452,1.652,453,1.443,454,1.913,455,1.913,456,2.795,457,4.621,458,2.795,459,1.913,460,1.913,461,2.795,462,2.795,463,2.263,464,2.242,465,2.795,466,2.795,467,2.795,468,2.795,469,2.795,470,2.795,471,2.263,472,2.795,473,2.263]],["title/components/UserLoginFormComponent.html",[0,0.132,58,0.36]],["body/components/UserLoginFormComponent.html",[0,0.198,1,0.283,2,0.751,3,0.337,4,0.283,5,0.525,6,0.525,7,0.525,8,0.525,9,0.414,11,0.525,12,1.26,13,0.81,15,0.768,17,0.768,19,0.337,20,0.768,22,0.669,23,1.044,25,0.713,26,0.05,27,1.125,28,1.273,29,1.273,33,0.77,34,0.283,35,0.337,36,0.493,37,0.525,38,0.907,39,0.768,40,0.525,41,0.998,42,0.525,43,0.683,44,0.525,45,0.283,46,0.337,47,0.907,48,0.283,49,0.337,50,0.283,51,0.337,52,0.283,53,0.493,54,0.525,55,0.283,56,0.457,57,0.525,58,0.539,59,0.817,60,0.729,61,0.768,62,0.283,63,0.525,64,0.283,65,0.337,66,0.525,67,0.283,68,0.283,69,0.283,70,0.395,71,0.457,72,0.525,73,0.525,74,0.027,75,0.027,76,1.284,100,1.122,103,1.138,118,0.599,120,0.871,121,0.871,133,2.603,156,0.871,169,0.768,170,1.035,171,0.68,174,1.248,176,0.768,177,1.138,180,0.525,181,0.525,183,0.768,184,1.138,189,0.987,193,0.525,198,1.443,214,1.557,252,1.488,254,2.133,256,1.878,257,1.273,273,2.442,287,2.22,290,1.878,350,2.598,356,2.133,357,1.996,363,1.284,365,1.996,373,1.122,392,1.122,395,2.442,403,1.122,420,1.122,423,1.443,424,1.443,452,1.878,453,1.122,454,1.488,455,1.488,459,1.488,460,1.488,464,1.284,474,2.603,475,1.488,476,3.01,477,3.042,478,2.573,479,3.01,480,3.042,481,3.498,482,4.593,483,2.829,484,3.01,485,3.178,486,2.175,487,2.829,488,2.175,489,2.173,490,3.178,491,3.178,492,3.178,493,2.173,494,2.173,495,1.76,496,2.173,497,1.76,498,2.173,499,2.571,500,1.76,501,1.76,502,3.042,503,2.173,504,1.488,505,1.488,506,2.173,507,1.76,508,2.173,509,2.173,510,2.173,511,1.76,512,1.76,513,2.173,514,3.178,515,1.488,516,2.173,517,1.878,518,1.76,519,1.488,520,2.829]],["title/components/UserProfileComponent.html",[0,0.132,62,0.36]],["body/components/UserProfileComponent.html",[0,0.179,1,0.232,2,0.497,3,0.276,4,0.232,5,0.43,6,0.43,7,0.43,8,0.43,9,0.232,11,0.43,12,1.211,13,0.778,15,0.661,17,0.661,19,0.276,20,0.661,22,0.576,23,1.077,25,0.729,26,0.05,27,1.663,28,1.498,29,1.498,33,0.661,34,0.232,35,0.276,36,0.425,37,0.43,38,0.661,39,0.661,40,0.43,41,0.903,42,0.43,43,0.68,44,0.43,45,0.232,46,0.276,47,0.805,48,0.232,49,0.276,50,0.232,51,0.276,52,0.232,53,0.276,54,0.43,55,0.232,56,0.375,57,0.43,58,0.232,59,0.845,60,0.232,61,0.661,62,0.488,63,0.43,64,0.488,65,0.794,66,0.43,67,0.232,68,0.232,69,0.232,70,0.324,71,0.701,72,0.43,73,0.43,74,0.023,75,0.023,100,0.919,103,0.918,118,0.49,120,0.713,121,0.713,139,3.532,145,1.051,146,1.441,156,2.031,169,0.661,170,0.918,171,1.262,174,1.196,175,1.698,176,0.661,177,1.03,180,0.661,181,0.661,183,1.135,184,1.364,193,0.43,199,1.218,201,0.808,214,1.429,245,2.622,251,3.268,254,2.519,257,1.096,282,2.622,305,2.28,307,1.218,329,2.622,330,2.215,356,1.93,357,1.832,359,3.45,363,1.051,364,2.762,365,1.832,369,3.028,373,0.919,381,2.559,392,0.919,403,0.919,408,1.441,410,1.441,411,1.441,412,2.215,415,1.441,416,1.441,423,0.808,424,0.808,430,1.441,435,1.872,437,1.441,453,0.919,471,1.441,473,2.215,474,2.664,481,3.283,515,1.872,517,1.051,521,1.441,522,3.331,523,2.735,524,3.739,525,4.261,526,3.739,527,2.735,528,2.735,529,1.779,530,3.028,531,3.739,532,2.735,533,2.735,534,1.779,535,2.735,536,1.779,537,3.739,538,3.739,539,1.779,540,3.283,541,3.283,542,1.779,543,2.735,544,2.735,545,1.779,546,2.735,547,1.779,548,1.779,549,1.779,550,1.779,551,1.779,552,1.779,553,1.779,554,1.779,555,1.779,556,1.779,557,1.779,558,1.779,559,1.779,560,1.779,561,1.779,562,2.215,563,1.779,564,1.779,565,1.441,566,1.779,567,1.779,568,1.779,569,1.779,570,1.779,571,1.779,572,1.779,573,2.735,574,2.735,575,2.735,576,2.735,577,2.735,578,2.735,579,2.735,580,2.735,581,2.215,582,1.441,583,1.441,584,1.441,585,1.441,586,1.441,587,1.779,588,1.779,589,2.735]],["title/components/UserProfileUpdateComponent.html",[0,0.132,64,0.36]],["body/components/UserProfileUpdateComponent.html",[0,0.184,1,0.296,2,0.766,3,0.352,4,0.296,5,0.547,6,0.547,7,0.547,8,0.547,9,0.296,11,0.547,12,1.27,13,0.816,15,0.791,17,0.791,19,0.352,20,0.791,22,0.69,23,1.036,25,0.723,26,0.05,27,1.493,28,0.908,29,0.908,33,0.694,34,0.296,35,0.352,36,0.509,37,0.547,38,0.791,39,0.791,40,0.547,41,1.018,42,0.547,43,0.7,44,0.547,45,0.296,46,0.352,47,0.929,48,0.296,49,0.352,50,0.296,51,0.352,52,0.296,53,0.352,54,0.547,55,0.296,56,0.477,57,0.547,58,0.296,59,0.828,60,0.296,61,0.791,62,0.296,63,0.547,64,0.55,65,0.869,66,0.547,67,0.296,68,0.296,69,0.296,70,0.412,71,0.69,72,0.547,73,0.547,74,0.028,75,0.028,103,1.06,118,0.902,120,0.908,121,0.908,145,2.962,169,0.791,170,1.06,174,1.259,175,1.65,176,0.791,177,1.161,178,1.339,180,0.547,181,0.547,183,0.791,184,1.161,185,1.339,186,1.936,191,1.17,192,1.339,193,0.547,198,1.029,214,1.583,229,3.774,240,2.243,254,2.176,256,1.339,257,1.313,273,1.936,282,3.046,287,2.274,290,1.936,350,2.642,356,2.308,357,2.03,365,2.03,373,1.17,403,1.17,420,1.17,423,1.487,424,1.487,425,1.936,459,1.551,460,1.551,464,1.339,474,2.588,476,2.243,479,3.061,483,2.243,484,3.061,486,2.243,487,3.061,488,2.243,499,2.243,504,1.551,505,1.551,507,1.835,515,1.551,517,1.339,519,1.551,540,2.634,541,2.634,590,1.835,591,3.848,592,3.276,593,3.276,594,2.266,595,2.266,596,2.266,597,2.266,598,2.266,599,2.266,600,2.266,601,2.266,602,2.653,603,2.266,604,1.835,605,2.266,606,2.266]],["title/components/UserRegistrationFormComponent.html",[0,0.132,67,0.36]],["body/components/UserRegistrationFormComponent.html",[0,0.201,1,0.293,2,0.763,3,0.349,4,0.293,5,0.543,6,0.543,7,0.543,8,0.543,9,0.425,11,0.543,12,1.268,13,0.815,15,0.786,17,0.786,19,0.349,20,0.786,22,0.685,23,1.033,25,0.692,26,0.05,27,1.486,28,1.305,29,1.305,33,0.744,34,0.293,35,0.349,36,0.505,37,0.543,38,0.925,39,0.786,40,0.543,41,1.014,42,0.543,43,0.696,44,0.543,45,0.293,46,0.349,47,0.925,48,0.293,49,0.349,50,0.293,51,0.349,52,0.293,53,0.349,54,0.543,55,0.293,56,0.473,57,0.543,58,0.293,59,0.832,60,0.293,61,0.786,62,0.293,63,0.543,64,0.293,65,0.349,66,0.543,67,0.547,68,0.728,69,0.293,70,0.409,71,0.473,72,0.543,73,0.543,74,0.028,75,0.028,103,1.28,118,0.619,120,0.9,121,0.9,133,2.582,169,0.786,170,1.054,171,0.703,174,1.208,176,0.786,177,1.156,180,0.543,181,0.543,183,0.786,184,1.156,193,0.543,198,1.478,214,1.578,254,1.976,256,1.328,257,1.305,273,1.924,287,2.262,290,1.924,350,2.633,356,2.167,357,2.023,363,1.328,365,2.023,373,1.16,392,1.16,395,2.481,403,1.16,420,1.16,423,1.478,424,1.478,425,1.328,452,1.924,453,1.16,454,1.538,455,1.538,463,2.636,464,1.328,474,2.582,475,1.538,476,3.05,477,3.1,478,2.636,479,3.05,480,3.1,483,2.873,484,3.05,486,2.228,487,2.873,488,2.228,495,1.819,497,1.819,499,2.621,500,1.819,501,1.819,502,3.1,504,1.538,505,1.538,517,1.328,519,1.538,520,1.538,540,2.621,541,2.621,602,1.819,607,4.646,608,3.255,609,2.247,610,2.228,611,2.247,612,2.247,613,2.247,614,2.247,615,2.247,616,2.247,617,1.819,618,2.247,619,3.399,620,3.399]],["title/components/WelcomePageComponent.html",[0,0.132,69,0.36]],["body/components/WelcomePageComponent.html",[0,0.2,1,0.344,2,0.761,3,0.41,4,0.344,5,0.638,6,0.638,7,0.638,8,0.638,9,0.344,11,0.638,12,1.303,13,0.843,15,0.882,17,0.882,19,0.41,20,0.882,22,0.556,23,0.997,25,0.567,26,0.049,30,1.884,33,0.735,34,0.344,35,0.41,36,0.567,37,0.638,38,0.882,39,0.882,40,0.638,41,1.09,42,0.638,43,0.761,44,0.638,45,0.344,46,0.41,47,1.01,48,0.344,49,0.41,50,0.344,51,0.41,52,0.344,53,0.41,54,0.638,55,0.344,56,0.556,57,0.638,58,0.476,59,0.76,60,0.667,61,0.882,62,0.344,63,0.638,64,0.344,65,0.41,66,0.638,67,0.476,68,0.655,69,0.588,70,0.966,71,0.95,72,0.638,73,0.638,74,0.031,75,0.031,118,0.727,133,1.884,134,2.956,137,3.353,169,0.882,170,1.152,171,1.644,174,0.882,176,0.882,177,1.243,180,0.638,181,0.638,183,1.01,184,1.349,193,0.638,201,2.049,364,3.242,381,3.089,382,3.654,435,1.808,453,1.363,581,2.956,582,2.139,583,2.139,584,2.139,585,2.139,586,2.139,610,1.808,619,2.956,620,2.956,621,3.967,622,2.139,623,4.183,624,3.65,625,4.513,626,4.513,627,2.641,628,2.641,629,2.641,630,2.641,631,4.513,632,2.641,633,3.65,634,2.641,635,2.641,636,2.641,637,2.641,638,2.641,639,3.65,640,3.65,641,2.641,642,2.641,643,2.641,644,2.641]],["title/coverage.html",[645,3.047]],["body/coverage.html",[0,0.266,1,0.448,9,0.448,10,2.78,25,0.533,26,0.049,45,0.448,48,0.448,50,0.448,52,0.448,55,0.448,58,0.448,60,0.566,62,0.448,64,0.448,65,0.674,67,0.448,68,0.566,69,0.448,74,0.037,75,0.037,103,1.196,133,2.241,135,2.35,137,2.35,139,2.35,141,2.028,143,2.028,144,2.028,145,2.028,147,2.35,167,2.78,168,2.815,203,2.78,213,2.028,214,1.215,216,2.972,217,2.972,300,2.35,311,2.35,348,2.78,352,2.78,353,2.78,440,2.78,441,2.78,474,2.584,475,2.972,521,2.78,590,2.78,621,2.78,622,2.78,645,2.78,646,2.78,647,3.432,648,3.432,649,4.271,650,3.432,651,4.763,652,4.763,653,3.432,654,3.432,655,5.163,656,5.163,657,3.432,658,3.432,659,4.342,660,3.432,661,3.432,662,4.342,663,4.342,664,3.432,665,3.432,666,3.432,667,3.432,668,2.78,669,3.516,670,2.78,671,3.516,672,2.78,673,2.78,674,3.432,675,3.432]],["title/dependencies.html",[79,1.961,676,1.869]],["body/dependencies.html",[26,0.049,34,0.53,74,0.041,75,0.041,79,2.4,94,3.898,95,3.295,100,2.096,129,3.289,131,3.289,132,3.289,294,3.289,677,4.061,678,5.59,679,4.061,680,4.814,681,4.061,682,4.061,683,4.061,684,4.061,685,4.061,686,4.061,687,4.061,688,4.061,689,4.061,690,4.061,691,4.061]],["title/index.html",[19,0.358,692,2.308,693,2.308]],["body/index.html",[0,0.222,4,0.369,13,0.721,26,0.033,30,1.461,31,3.5,32,2.291,43,0.515,46,0.439,49,0.439,51,0.439,53,0.776,59,0.827,60,0.369,65,0.721,68,0.369,70,0.696,71,0.805,74,0.033,75,0.033,87,1.672,101,1.672,103,1.054,107,3.099,150,2.291,156,1.944,157,2.968,169,0.683,171,0.885,175,1.002,189,1.285,193,0.924,240,2.619,245,1.672,268,2.291,282,1.672,311,1.937,329,1.672,343,3.099,380,2.291,405,2.291,452,2.261,481,1.937,511,2.291,512,3.761,520,1.937,530,2.291,562,2.291,565,3.511,604,2.291,610,1.937,617,2.291,646,2.291,676,3.099,694,2.829,695,2.829,696,4.852,697,3.826,698,4.852,699,2.829,700,2.829,701,4.336,702,2.829,703,2.829,704,2.829,705,3.826,706,2.829,707,2.829,708,2.829,709,2.829,710,2.829,711,2.829,712,2.829,713,4.336,714,2.829,715,2.829,716,2.829,717,2.829,718,2.829,719,2.829,720,4.336,721,2.829,722,2.829,723,2.829,724,3.826,725,2.829,726,2.829,727,2.829,728,2.829,729,2.829,730,3.826,731,2.829,732,2.829,733,2.829,734,2.829,735,2.829,736,2.829,737,2.829,738,2.829,739,2.829,740,2.829,741,2.829,742,3.826,743,2.829,744,2.829,745,4.336,746,2.829,747,2.829,748,2.829,749,2.829,750,2.829,751,2.829,752,4.336,753,2.829,754,2.829,755,4.336,756,2.829,757,2.829,758,2.829,759,2.829,760,4.645,761,2.829,762,2.829,763,2.829,764,2.829,765,2.829,766,4.336,767,2.829,768,2.829,769,4.852,770,5.113,771,2.829,772,2.829,773,2.829,774,2.829,775,2.829,776,2.829,777,2.829,778,4.336,779,4.336,780,2.829,781,2.829,782,2.829,783,2.829,784,2.829,785,3.826,786,3.826,787,4.645,788,2.829,789,3.826,790,2.829,791,5.001,792,2.829,793,2.829,794,2.829,795,3.826,796,2.829,797,2.829,798,2.829,799,2.829,800,2.829,801,4.336,802,2.829,803,1.937,804,2.829]],["title/modules.html",[78,1.943]],["body/modules.html",[26,0.043,74,0.043,75,0.043,77,2.594,78,2.266,84,2.266,95,3.005,239,3.555,805,4.39,806,4.39,807,5.037,808,4.39]],["title/overview.html",[803,2.576]],["body/overview.html",[1,0.71,2,0.672,26,0.049,45,0.642,48,0.642,50,0.642,52,0.642,55,0.642,58,0.642,62,0.642,64,0.642,67,0.642,69,0.642,74,0.039,75,0.039,77,3.416,78,1.908,79,2.688,80,2.994,81,2.994,82,2.994,83,2.994,84,2.543,85,3.683,86,2.994,87,2.185,213,2.185,518,2.994,649,2.994,803,2.531,809,3.697,810,3.697]],["title/routes.html",[99,2.224]],["body/routes.html",[26,0.044,74,0.044,75,0.044,99,2.645]],["title/miscellaneous/variables.html",[399,2.272,811,1.869]],["body/miscellaneous/variables.html",[19,0.612,25,0.834,26,0.049,27,1.397,28,2.106,29,2.106,74,0.04,75,0.04,103,1.303,216,2.7,217,3.238,257,1.896,300,3.238,301,3.194,392,2.442,395,2.331,399,2.7,668,3.194,669,4.255,670,3.194,671,3.194,672,3.831,673,3.831,811,3.194,812,3.945,813,4.731,814,3.945,815,3.945,816,3.945,817,3.945,818,3.945,819,4.731]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":649,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.11.4",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":810,"title":{},"body":{"overview.html":{}}}],["1/4",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":439,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["11",{"_index":809,"title":{},"body":{"overview.html":{}}}],["12.0.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["12.2.7",{"_index":767,"title":{},"body":{"index.html":{}}}],["12.2.8",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["14/15",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["1rem",{"_index":588,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["2",{"_index":518,"title":{},"body":{"components/UserLoginFormComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":436,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["2/10",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":517,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["22",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":561,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["25rem",{"_index":202,"title":{},"body":{"components/DetailsDialogComponent.html":{}}}],["280px",{"_index":640,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["2rem",{"_index":473,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["3000",{"_index":425,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["33",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":587,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["4rem",{"_index":437,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["50rem",{"_index":211,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["56",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["6/16",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":643,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["9",{"_index":746,"title":{},"body":{"index.html":{}}}],["9/16",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["account",{"_index":530,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["actual_component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"index.html":{}}}],["add/remove",{"_index":328,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["added",{"_index":422,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavorite",{"_index":218,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["addfavorite(id",{"_index":243,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["addfavoritebutton",{"_index":358,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritebutton(id",{"_index":367,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["adds",{"_index":732,"title":{},"body":{"index.html":{}}}],["align",{"_index":584,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["allows",{"_index":735,"title":{},"body":{"index.html":{}}}],["angular",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"index.html":{}}}],["angular's",{"_index":737,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["angular/compiler",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/divider",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/material/toolbar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["api",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":300,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["app.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":698,"title":{},"body":{"index.html":{}}}],["application's",{"_index":756,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":77,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":84,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["arrays",{"_index":401,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["artifacts",{"_index":781,"title":{},"body":{"index.html":{}}}],["assigning",{"_index":639,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["authenticated",{"_index":729,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":322,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["auto",{"_index":644,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["automatically",{"_index":774,"title":{},"body":{"index.html":{}}}],["available",{"_index":239,"title":{},"body":{"injectables/FetchApiDataService.html":{},"modules.html":{}}}],["back",{"_index":455,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["backend",{"_index":492,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["bar",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["bar'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["bar.component",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":443,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":442,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":441,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:14",{"_index":446,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:17",{"_index":451,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:20",{"_index":447,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:26",{"_index":448,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":699,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":323,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["beta.35",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":469,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bio",{"_index":208,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["birthday",{"_index":541,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["body",{"_index":316,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["bootstrap",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["brings",{"_index":500,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":807,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":696,"title":{},"body":{"index.html":{}}}],["built",{"_index":706,"title":{},"body":{"index.html":{}}}],["button",{"_index":381,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["call",{"_index":290,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["called",{"_index":405,"title":{},"body":{"components/MovieCardComponent.html":{},"index.html":{}}}],["calls",{"_index":501,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["capabilities",{"_index":799,"title":{},"body":{"index.html":{}}}],["card",{"_index":189,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"index.html":{}}}],["card'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":355,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.scss",{"_index":354,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts",{"_index":353,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:112",{"_index":386,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:127",{"_index":384,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:143",{"_index":378,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:23",{"_index":398,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:24",{"_index":366,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:27",{"_index":397,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:28",{"_index":396,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:29",{"_index":402,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:33",{"_index":376,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:41",{"_index":372,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:52",{"_index":374,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:66",{"_index":368,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:83",{"_index":388,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:99",{"_index":391,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card/movie",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["cards",{"_index":404,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["catcherror",{"_index":296,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["catcherror(this.handleerror",{"_index":310,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["center",{"_index":586,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["change",{"_index":775,"title":{},"body":{"index.html":{}}}],["check",{"_index":562,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["choice",{"_index":794,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["cli",{"_index":766,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":382,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["clicks",{"_index":733,"title":{},"body":{"index.html":{}}}],["client",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["close",{"_index":198,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":343,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["codebase",{"_index":757,"title":{},"body":{"index.html":{}}}],["column",{"_index":583,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["command",{"_index":795,"title":{},"body":{"index.html":{}}}],["comments",{"_index":758,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["confirm",{"_index":563,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["confirmation",{"_index":533,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console",{"_index":275,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.error",{"_index":341,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.error('some",{"_index":338,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.log('getmovies",{"_index":413,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log('getuserfavs",{"_index":418,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log('loginuser",{"_index":514,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["console.log('registeruser",{"_index":615,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["console.log('userlogout",{"_index":458,"title":{},"body":{"components/NavBarComponent.html":{}}}],["console.log(response",{"_index":602,"title":{},"body":{"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["const",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(data",{"_index":178,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["constructor(dialog",{"_index":627,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":363,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":232,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(private",{"_index":306,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(public",{"_index":637,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(snackbar",{"_index":445,"title":{},"body":{"components/NavBarComponent.html":{}}}],["contain",{"_index":752,"title":{},"body":{"index.html":{}}}],["content",{"_index":199,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["context",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":566,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["coverage",{"_index":645,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":724,"title":{},"body":{"index.html":{}}}],["creating",{"_index":407,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["current",{"_index":450,"title":{},"body":{"components/NavBarComponent.html":{}}}],["data",{"_index":175,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"index.html":{}}}],["data.bio",{"_index":210,"title":{},"body":{"components/DirectorDialogComponent.html":{}}}],["data.bio}}close",{"_index":212,"title":{},"body":{"components/DirectorDialogComponent.html":{}}}],["data.description",{"_index":197,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["data.name",{"_index":209,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["data.service",{"_index":403,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":217,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:115",{"_index":266,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:135",{"_index":269,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:154",{"_index":281,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:172",{"_index":250,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:19",{"_index":234,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:191",{"_index":244,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:210",{"_index":279,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:229",{"_index":258,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:239",{"_index":272,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:35",{"_index":289,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:46",{"_index":285,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:63",{"_index":263,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:80",{"_index":267,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:97",{"_index":265,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.title",{"_index":196,"title":{},"body":{"components/DetailsDialogComponent.html":{}}}],["database",{"_index":703,"title":{},"body":{"index.html":{}}}],["date",{"_index":577,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dd/mm/yyyy",{"_index":578,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["declared",{"_index":400,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["declaring",{"_index":298,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["decorators",{"_index":185,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["defines",{"_index":486,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["delete",{"_index":251,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["deleted",{"_index":571,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["deletes",{"_index":532,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["deleteuser",{"_index":219,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deleteuserdata",{"_index":524,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dependencies",{"_index":79,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":194,"title":{},"body":{"components/DetailsDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["design",{"_index":741,"title":{},"body":{"index.html":{}}}],["designed",{"_index":754,"title":{},"body":{"index.html":{}}}],["details",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["detailsdialogcomponent",{"_index":45,"title":{"components/DetailsDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dev",{"_index":772,"title":{},"body":{"index.html":{}}}],["development",{"_index":768,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":171,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["dialog'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialog.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{}}}],["dialog.component.html",{"_index":173,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["dialog.component.scss",{"_index":172,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["dialog.component.ts",{"_index":168,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":204,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":179,"title":{},"body":{"components/DetailsDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":206,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":187,"title":{},"body":{"components/DetailsDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":205,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":182,"title":{},"body":{"components/DetailsDialogComponent.html":{}}}],["dialog/details",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["dialog/director",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorDialogComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["dialog/genre",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":479,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["different",{"_index":714,"title":{},"body":{"index.html":{}}}],["direction",{"_index":582,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":780,"title":{},"body":{"index.html":{}}}],["director",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["directordialogcomponent",{"_index":48,"title":{"components/DirectorDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directors",{"_index":717,"title":{},"body":{"index.html":{}}}],["directory",{"_index":784,"title":{},"body":{"index.html":{}}}],["display",{"_index":453,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["displays",{"_index":193,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["dist",{"_index":783,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":646,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["done",{"_index":406,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["duration",{"_index":424,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dynamic",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":792,"title":{},"body":{"index.html":{}}}],["element",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":540,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["empty",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":791,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":291,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["endpoints",{"_index":304,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["entire",{"_index":237,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["environment",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":276,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error",{"_index":335,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error.message",{"_index":340,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.status",{"_index":344,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.statustext",{"_index":346,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorevent",{"_index":337,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["everywhere",{"_index":302,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["execute",{"_index":789,"title":{},"body":{"index.html":{}}}],["existing",{"_index":700,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extraction",{"_index":261,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata",{"_index":221,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata(res",{"_index":255,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["false",{"_index":395,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":329,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["favorite.title",{"_index":580,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite_border",{"_index":434,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favoritemovies",{"_index":375,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favorites",{"_index":245,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["features",{"_index":727,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":373,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":356,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidataservice",{"_index":214,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["field",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["files",{"_index":776,"title":{},"body":{"index.html":{}}}],["filter",{"_index":535,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["filterfavorites",{"_index":525,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["first",{"_index":797,"title":{},"body":{"index.html":{}}}],["flex",{"_index":581,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["flexlayoutmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["form",{"_index":476,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":478,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":477,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":475,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:21",{"_index":613,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:23",{"_index":496,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":608,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":485,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:29",{"_index":612,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:30",{"_index":611,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:31",{"_index":495,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:32",{"_index":494,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":497,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:34",{"_index":498,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":493,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:39",{"_index":609,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:43",{"_index":489,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form/user",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["forms",{"_index":753,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":273,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["further",{"_index":800,"title":{},"body":{"index.html":{}}}],["generate",{"_index":778,"title":{},"body":{"index.html":{}}}],["generated",{"_index":765,"title":{},"body":{"index.html":{}}}],["genre",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["genredialogcomponent",{"_index":50,"title":{"components/GenreDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genres",{"_index":718,"title":{},"body":{"index.html":{}}}],["getallmovies",{"_index":222,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["getdirector",{"_index":223,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getgenre",{"_index":224,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getmovies",{"_index":359,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["getonemovie",{"_index":225,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["gets",{"_index":537,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getting",{"_index":692,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":226,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getuserdata",{"_index":526,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getuserfavs",{"_index":360,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["github",{"_index":763,"title":{},"body":{"index.html":{}}}],["go",{"_index":802,"title":{},"body":{"index.html":{}}}],["graph",{"_index":808,"title":{},"body":{"modules.html":{}}}],["handleerror",{"_index":227,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["handleerror(error",{"_index":270,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["header",{"_index":253,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["headers",{"_index":321,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["help",{"_index":801,"title":{},"body":{"index.html":{}}}],["hosted",{"_index":762,"title":{},"body":{"index.html":{}}}],["html",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":242,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["http://localhost:4200",{"_index":773,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":233,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpclientmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":271,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpheaders",{"_index":292,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpparams",{"_index":293,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["https://myflixdb2000.herokuapp.com",{"_index":301,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":371,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["id",{"_index":246,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["identifier",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":195,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["implement",{"_index":738,"title":{},"body":{"index.html":{}}}],["implements",{"_index":169,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["information",{"_index":713,"title":{},"body":{"index.html":{}}}],["inject",{"_index":191,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["inject(mat_dialog_data",{"_index":186,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["injectable",{"_index":213,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["input",{"_index":487,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":483,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["instanceof",{"_index":336,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["interested",{"_index":723,"title":{},"body":{"index.html":{}}}],["interface",{"_index":709,"title":{},"body":{"index.html":{}}}],["isloading",{"_index":480,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["items",{"_index":585,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["i’ve",{"_index":721,"title":{},"body":{"index.html":{}}}],["jsdoc",{"_index":761,"title":{},"body":{"index.html":{}}}],["json.stringify(userdetails",{"_index":317,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["justify",{"_index":467,"title":{},"body":{"components/NavBarComponent.html":{}}}],["karma",{"_index":790,"title":{},"body":{"index.html":{}}}],["key",{"_index":726,"title":{},"body":{"index.html":{}}}],["later",{"_index":747,"title":{},"body":{"index.html":{}}}],["latest",{"_index":749,"title":{},"body":{"index.html":{}}}],["layout",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["learn",{"_index":719,"title":{},"body":{"index.html":{}}}],["legend",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["links",{"_index":730,"title":{},"body":{"index.html":{}}}],["literal",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":543,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["local",{"_index":459,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["localstorage.clear",{"_index":568,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["localstorage.getitem('token",{"_index":319,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["localstorage.getitem('user",{"_index":330,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.removeitem('token",{"_index":461,"title":{},"body":{"components/NavBarComponent.html":{}}}],["localstorage.removeitem('user",{"_index":462,"title":{},"body":{"components/NavBarComponent.html":{}}}],["localstorage.setitem('token",{"_index":509,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":507,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["log",{"_index":520,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["login",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginuser",{"_index":482,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logout",{"_index":457,"title":{},"body":{"components/NavBarComponent.html":{}}}],["logs",{"_index":449,"title":{},"body":{"components/NavBarComponent.html":{}}}],["main",{"_index":642,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["making",{"_index":238,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map",{"_index":295,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map(this.extractresponsedata",{"_index":324,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["margin",{"_index":435,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["mat",{"_index":370,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["mat_dialog_data",{"_index":192,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["matbuttonmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":364,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":350,"title":{},"body":{"components/GenreDialogComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matdividermodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["matformfieldmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":365,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":200,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["message",{"_index":420,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["messages",{"_index":274,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["methods",{"_index":176,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["miscellaneous",{"_index":811,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":504,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":76,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{}}}],["modules",{"_index":78,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moive",{"_index":351,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["more",{"_index":720,"title":{},"body":{"index.html":{}}}],["movie",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["movie.title",{"_index":433,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["moviecardcomponent",{"_index":52,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movies",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["movies/:title",{"_index":325,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["movies/director/:name",{"_index":326,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["movies/genres/:genre",{"_index":327,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["myflix",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/NavBarComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["myflixangularclient",{"_index":694,"title":{},"body":{"index.html":{}}}],["n/a",{"_index":579,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["nav",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navbar",{"_index":466,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":55,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":511,"title":{},"body":{"components/UserLoginFormComponent.html":{},"index.html":{}}}],["navigation",{"_index":456,"title":{},"body":{"components/NavBarComponent.html":{}}}],["need",{"_index":796,"title":{},"body":{"index.html":{}}}],["new",{"_index":311,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":770,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":177,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["node.js",{"_index":750,"title":{},"body":{"index.html":{}}}],["non",{"_index":259,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["notifications",{"_index":454,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["now",{"_index":617,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["npm",{"_index":751,"title":{},"body":{"index.html":{}}}],["object",{"_index":257,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["objective",{"_index":695,"title":{},"body":{"index.html":{}}}],["observable",{"_index":247,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["occurred",{"_index":339,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["ok",{"_index":423,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["once",{"_index":728,"title":{},"body":{"index.html":{}}}],["one",{"_index":268,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["oninit",{"_index":170,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["open",{"_index":631,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["opendetailsdialog",{"_index":190,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["opendetailsdialog(title",{"_index":377,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opendirectordialog",{"_index":207,"title":{},"body":{"components/DirectorDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["opendirectordialog(name",{"_index":383,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opened",{"_index":379,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opengenredialog",{"_index":349,"title":{},"body":{"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{}}}],["opengenredialog(name",{"_index":385,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openprofileupdatedialog",{"_index":527,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["openprofileupdatedialog(username",{"_index":544,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["opens",{"_index":734,"title":{},"body":{"index.html":{}}}],["openuserlogindialog",{"_index":625,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":626,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":181,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["options",{"_index":636,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":803,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":676,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":471,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["page",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":624,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":623,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":622,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:17",{"_index":628,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:19",{"_index":634,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:21",{"_index":629,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:27",{"_index":632,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:37",{"_index":630,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":764,"title":{},"body":{"index.html":{}}}],["param",{"_index":305,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["parameters",{"_index":180,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["params",{"_index":235,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["pass",{"_index":430,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["passed",{"_index":488,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["passes",{"_index":546,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["passing",{"_index":264,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["password",{"_index":287,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":318,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["platform",{"_index":793,"title":{},"body":{"index.html":{}}}],["post",{"_index":249,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["poster",{"_index":438,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["prefix",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["pressed",{"_index":531,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["production",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["profile'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":523,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":522,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":521,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:19",{"_index":553,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":548,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":550,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":528,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":549,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":551,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":552,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":547,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":542,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":539,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:53",{"_index":536,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":534,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":545,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":529,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":760,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["provide",{"_index":299,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["providedin",{"_index":303,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["providers",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":236,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["public",{"_index":174,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["query",{"_index":286,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["reached",{"_index":414,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{}}}],["read",{"_index":712,"title":{},"body":{"index.html":{}}}],["receive",{"_index":716,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":804,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":394,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["register",{"_index":610,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["registered",{"_index":618,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":607,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["reload",{"_index":604,"title":{},"body":{"components/UserProfileUpdateComponent.html":{},"index.html":{}}}],["remove",{"_index":389,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{}}}],["removed",{"_index":427,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefavorite",{"_index":228,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["removefavorite(id",{"_index":278,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["removefavoritebutton",{"_index":361,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefavoritebutton(id",{"_index":387,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["require",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirements",{"_index":743,"title":{},"body":{"index.html":{}}}],["requires",{"_index":748,"title":{},"body":{"index.html":{}}}],["res",{"_index":262,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["reset",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["resp",{"_index":412,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["resp.favoritemovies",{"_index":417,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["response",{"_index":256,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["response.token",{"_index":510,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["response.user.username",{"_index":508,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["response.username",{"_index":601,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["responsible",{"_index":490,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["responsive",{"_index":705,"title":{},"body":{"index.html":{}}}],["rest",{"_index":702,"title":{},"body":{"index.html":{}}}],["results",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":188,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{}}}],["return",{"_index":307,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["returns",{"_index":183,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["right",{"_index":472,"title":{},"body":{"components/NavBarComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["route",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["router",{"_index":481,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["routermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":99,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing",{"_index":707,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":769,"title":{},"body":{"index.html":{}}}],["running",{"_index":785,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":294,"title":{},"body":{"injectables/FetchApiDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":297,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["save",{"_index":725,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":777,"title":{},"body":{"index.html":{}}}],["screen",{"_index":635,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["send",{"_index":463,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["sending",{"_index":491,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["serve",{"_index":771,"title":{},"body":{"index.html":{}}}],["server",{"_index":701,"title":{},"body":{"index.html":{}}}],["set('password",{"_index":314,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["set('username",{"_index":312,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["setfavestatus",{"_index":362,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["setfavestatus(id",{"_index":390,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["sets",{"_index":393,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["settimeout(function",{"_index":605,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["several",{"_index":708,"title":{},"body":{"index.html":{}}}],["side",{"_index":697,"title":{},"body":{"index.html":{}}}],["sign",{"_index":619,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["signup",{"_index":633,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["simple",{"_index":739,"title":{},"body":{"index.html":{}}}],["single",{"_index":704,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":357,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["space",{"_index":468,"title":{},"body":{"components/NavBarComponent.html":{}}}],["span",{"_index":470,"title":{},"body":{"components/NavBarComponent.html":{}}}],["spec\\.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/details",{"_index":167,"title":{},"body":{"components/DetailsDialogComponent.html":{},"coverage.html":{}}}],["src/app/director",{"_index":203,"title":{},"body":{"components/DirectorDialogComponent.html":{},"coverage.html":{}}}],["src/app/fetch",{"_index":216,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/genre",{"_index":348,"title":{},"body":{"components/GenreDialogComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":352,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/nav",{"_index":440,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":474,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":621,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":693,"title":{"index.html":{}},"body":{}}],["statements",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":342,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["storage",{"_index":460,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["store",{"_index":506,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["stored",{"_index":782,"title":{},"body":{"index.html":{}}}],["stories",{"_index":715,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["success",{"_index":499,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":464,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["support",{"_index":805,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":564,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["svg",{"_index":806,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":380,"title":{},"body":{"components/MovieCardComponent.html":{},"index.html":{}}}],["table",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["technical",{"_index":742,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["test",{"_index":788,"title":{},"body":{"index.html":{}}}],["testing",{"_index":798,"title":{},"body":{"index.html":{}}}],["tests",{"_index":787,"title":{},"body":{"index.html":{}}}],["text",{"_index":345,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.dialog.open(detailsdialogcomponent",{"_index":432,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(directordialogcomponent",{"_index":431,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(genredialogcomponent",{"_index":429,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":641,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userprofileupdatecomponent",{"_index":560,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":638,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":505,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.favorites",{"_index":416,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.favorites.includes(id",{"_index":428,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favorites.push(movie",{"_index":559,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.addfavorite(id).subscribe((resp",{"_index":419,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deleteuser().subscribe",{"_index":567,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((resp",{"_index":410,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getuser().subscribe((resp",{"_index":415,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.removefavorite(id).subscribe((resp",{"_index":426,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.updateuser(this.userdata).subscribe((response",{"_index":600,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["this.fetchapidata.userlogin(this.userdata).subscribe((response",{"_index":503,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe((response",{"_index":614,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.filterfavorites",{"_index":556,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.getmovies",{"_index":408,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.getuserdata",{"_index":554,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.getuserfavs",{"_index":409,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.http",{"_index":241,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.delete(apiurl",{"_index":333,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.get(apiurl",{"_index":320,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.post(apiurl",{"_index":308,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.put(apiurl",{"_index":332,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.isloading",{"_index":502,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.movies",{"_index":411,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.movies.foreach((movie",{"_index":557,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.router.navigate(['movies",{"_index":513,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['users",{"_index":572,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":569,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open('login",{"_index":516,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.snackbar.open('profile",{"_index":570,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open(`${title",{"_index":421,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open(`logout",{"_index":465,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.snackbar.open(`update",{"_index":603,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["this.snackbar.open(`you",{"_index":616,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(response",{"_index":519,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.user",{"_index":555,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.favoritemovies.includes(movie._id",{"_index":558,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["throwerror",{"_index":277,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["throwerror(error.message",{"_index":347,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["token",{"_index":252,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["triggers",{"_index":538,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["true",{"_index":392,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":260,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["typedoc",{"_index":759,"title":{},"body":{"index.html":{}}}],["ui",{"_index":740,"title":{},"body":{"index.html":{}}}],["unit",{"_index":786,"title":{},"body":{"index.html":{}}}],["up",{"_index":620,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":282,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"index.html":{}}}],["update'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["update.component.html",{"_index":592,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.scss",{"_index":591,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts",{"_index":590,"title":{},"body":{"components/UserProfileUpdateComponent.html":{},"coverage.html":{}}}],["update.component.ts:22",{"_index":593,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:26",{"_index":596,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:27",{"_index":598,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:28",{"_index":597,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:29",{"_index":599,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:32",{"_index":594,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update.component.ts:38",{"_index":595,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["update/user",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"coverage.html":{}}}],["updateuser",{"_index":229,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileUpdateComponent.html":{}}}],["updateuser(userdetails",{"_index":280,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["upon",{"_index":515,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{}}}],["url",{"_index":248,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["use",{"_index":779,"title":{},"body":{"index.html":{}}}],["used",{"_index":452,"title":{},"body":{"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["user",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["user.birthday",{"_index":576,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.email",{"_index":575,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.username",{"_index":574,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdata",{"_index":484,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":283,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails).pipe",{"_index":309,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails.password",{"_index":315,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails.username",{"_index":313,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin",{"_index":230,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin(userdetails",{"_index":284,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userloginformcomponent",{"_index":58,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userlogout",{"_index":444,"title":{},"body":{"components/NavBarComponent.html":{}}}],["username",{"_index":254,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["username}}'s",{"_index":573,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["username}}\\'s",{"_index":589,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userprofilecomponent",{"_index":62,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileupdatecomponent",{"_index":64,"title":{"components/UserProfileUpdateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistration",{"_index":231,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistration(userdetails",{"_index":288,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistrationformcomponent",{"_index":67,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"index.html":{}}}],["users/${user",{"_index":331,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["users/${user}/movies/${id",{"_index":334,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["using",{"_index":755,"title":{},"body":{"index.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":399,"title":{"miscellaneous/variables.html":{}},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":745,"title":{},"body":{"index.html":{}}}],["via",{"_index":240,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileUpdateComponent.html":{},"index.html":{}}}],["view",{"_index":512,"title":{},"body":{"components/UserLoginFormComponent.html":{},"index.html":{}}}],["view/edit",{"_index":736,"title":{},"body":{"index.html":{}}}],["views",{"_index":710,"title":{},"body":{"index.html":{}}}],["void",{"_index":184,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["want",{"_index":565,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["watched",{"_index":722,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["welcomepagecomponent",{"_index":69,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileUpdateComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["well",{"_index":731,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":711,"title":{},"body":{"index.html":{}}}],["width",{"_index":201,"title":{},"body":{"components/DetailsDialogComponent.html":{},"components/DirectorDialogComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window.location.reload",{"_index":606,"title":{},"body":{"components/UserProfileUpdateComponent.html":{}}}],["written",{"_index":744,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'myFlix-Angular-client';\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetailsDialogComponent\n\nDetailsDialogComponent\n\nAppModule -->\n\nDetailsDialogComponent->AppModule\n\n\n\n\n\nDirectorDialogComponent\n\nDirectorDialogComponent\n\nAppModule -->\n\nDirectorDialogComponent->AppModule\n\n\n\n\n\nGenreDialogComponent\n\nGenreDialogComponent\n\nAppModule -->\n\nGenreDialogComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProfileUpdateComponent\n\nUserProfileUpdateComponent\n\nAppModule -->\n\nUserProfileUpdateComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DetailsDialogComponent\n                        \n                        \n                            DirectorDialogComponent\n                        \n                        \n                            GenreDialogComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserProfileUpdateComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// import RouterModule\nimport { RouterModule, Routes } from '@angular/router';\n\n// add HttpClientModule API\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Add modules from the Material components\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n// import app components\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { GenreDialogComponent } from './genre-dialog/genre-dialog.component';\nimport { DirectorDialogComponent } from './director-dialog/director-dialog.component';\nimport { DetailsDialogComponent } from './details-dialog/details-dialog.component';\nimport { UserProfileUpdateComponent } from './user-profile-update/user-profile-update.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\n\n// define welcome route and resolve empty route\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: MovieCardComponent },\n  { path: 'users', component: UserProfileComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    UserProfileComponent,\n    GenreDialogComponent,\n    DirectorDialogComponent,\n    DetailsDialogComponent,\n    UserProfileUpdateComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule, \n    FormsModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSnackBarModule, \n    MatIconModule,\n    MatToolbarModule, \n    FlexLayoutModule, \n    MatDividerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsDialogComponent.html":{"url":"components/DetailsDialogComponent.html","title":"component - DetailsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/details-dialog/details-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details-dialog\n            \n\n            \n                styleUrls\n                ./details-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/details-dialog/details-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/details-dialog/details-dialog.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/details-dialog/details-dialog.component.ts:21\n                        \n                    \n\n            \n                \n                    retrieve data from movie-card openDetailsDialog()\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-details-dialog',\n  templateUrl: './details-dialog.component.html',\n  styleUrls: ['./details-dialog.component.scss']\n})\n\n/**\n * This class displays movie title, description, and image\n */\nexport class DetailsDialogComponent implements OnInit {\n\n  constructor(\n    /**\n     * retrieve data from movie-card openDetailsDialog()\n     */\n    @Inject(MAT_DIALOG_DATA)\n    public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{data.title}}\n  \n  \n    {{data.description}}\n  \n    \n  \n    Close\n  \n\n    \n\n    \n                \n                    ./details-dialog.component.scss\n                \n                .details-content {\n    max-width: 25rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{data.title}}        {{data.description}}            Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectorDialogComponent.html":{"url":"components/DirectorDialogComponent.html","title":"component - DirectorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/director-dialog/director-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-director-dialog\n            \n\n            \n                styleUrls\n                ./director-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./director-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/director-dialog/director-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/director-dialog/director-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/director-dialog/director-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    retrieve data from movie-card openDirectorDialog()\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director-dialog',\n  templateUrl: './director-dialog.component.html',\n  styleUrls: ['./director-dialog.component.scss']\n})\n\n/**\n * This class displays director name and bio\n */\nexport class DirectorDialogComponent implements OnInit {\n\n  constructor(\n    /**\n     * retrieve data from movie-card openDirectorDialog()\n     */\n    @Inject(MAT_DIALOG_DATA)\n    public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n{{data.name}}\n\n  {{data.bio}}\n\n\nClose\n\n\n    \n\n    \n                \n                    ./director-dialog.component.scss\n                \n                .director-details {\n    max-width: 50rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.name}}  {{data.bio}}Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchApiDataService.html":{"url":"injectables/FetchApiDataService.html","title":"injectable - FetchApiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FetchApiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavorite\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getDirector\n                            \n                            \n                                getGenre\n                            \n                            \n                                getOneMovie\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                removeFavorite\n                            \n                            \n                                updateUser\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:19\n                            \n                        \n\n                \n                    \n                            Inject the HttpClient module to the constructor params\nProvides HttpClient to the entire class, making it available via this.http\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavorite\n                        \n                    \n                \n            \n            \n                \naddFavorite(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:191\n                \n            \n\n\n            \n                \n                    Add movie to favorites\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Movie id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url to post movie id to users favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:172\n                \n            \n\n\n            \n                \n                    Delete User with token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url to delete user by username\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractResponseData(res: Response | Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:229\n                \n            \n\n\n            \n                \n                    Non-typed response extraction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response | Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:63\n                \n            \n\n\n            \n                \n                    Get All Movies passing token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url to get movie data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirector\n                        \n                    \n                \n            \n            \n                \ngetDirector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:97\n                \n            \n\n\n            \n                \n                    Get Director data with token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        data on director by name with url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenre\n                        \n                    \n                \n            \n            \n                \ngetGenre()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:115\n                \n            \n\n\n            \n                \n                    Get Genre data with token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        data on genre by name with url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneMovie\n                        \n                    \n                \n            \n            \n                \ngetOneMovie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:80\n                \n            \n\n\n            \n                \n                    Get One Movie with token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        data on movie by title with url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:135\n                \n            \n\n\n            \n                \n                    Get User object from API with token in header\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user data object with url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:239\n                \n            \n\n\n            \n                \n                    handleError function, returns messages in console\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        throwerror\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavorite\n                        \n                    \n                \n            \n            \n                \nremoveFavorite(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:210\n                \n            \n\n\n            \n                \n                    Delete movie from favorites\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url with username and movie id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:154\n                \n            \n\n\n            \n                \n                    Update User data with token in header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url to update user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:46\n                \n            \n\n\n            \n                \n                    User Login, passing details to query params in the URL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url with username and password\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegistration(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:35\n                \n            \n\n\n            \n                \n                    Making the api call for the user registration endpoint\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        url with userDetails object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// HttpClient returns an observable\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n// declaring api url that will provide data to the app\nconst apiUrl = 'https://myflixdb2000.herokuapp.com/';\n\n// available everywhere in the app\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * API endpoints for MyFlix movies and user data\n */\nexport class FetchApiDataService {\n\n    /**\n   * Inject the HttpClient module to the constructor params\n   * Provides HttpClient to the entire class, making it available via this.http\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /* ----- USER ENDPOINTS, REGISTRATION, LOGIN ----- */\n\n  /**\n   * Making the api call for the user registration endpoint\n   * @param userDetails \n   * @returns url with userDetails object\n   */\n  public userRegistration(userDetails: any): Observable {\n    return this.http.post(apiUrl + 'users', userDetails).pipe(\n    catchError(this.handleError)\n    );\n  }\n\n  /**\n   * User Login, passing details to query params in the URL\n   * @param userDetails \n   * @returns url with username and password\n   */\n  public userLogin(userDetails: any): Observable {\n    const params = new HttpParams()\n      .set('Username', userDetails.Username)\n      .set('Password', userDetails.Password); \n    const body = JSON.stringify(userDetails);\n\n    return this.http.post(apiUrl + 'login', body, { 'params': params } ).pipe(\n    catchError(this.handleError)\n    );\n  }\n\n  /* ----- MOVIES ENDPOINTS, ALL MOVIES, ONE MOVIE, DIRECTOR, GENRE ----- */\n\n  /**\n   * Get All Movies passing token in header\n   * @returns url to get movie data\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies', {\n      headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Get One Movie with token in header\n   * @returns data on movie by title with url\n   */\n  getOneMovie(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/:Title', {\n      headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Get Director data with token in header\n   * @returns data on director by name with url\n   */\n  getDirector(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/director/:Name', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * Get Genre data with token in header\n   * @returns data on genre by name with url\n   */\n  getGenre(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/genres/:Genre', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /* ------ GET USER DATA, UPDATE USER, ADD/REMOVE FAVORITE MOVIES ------*/\n\n\n  /**\n   * Get User object from API with token in header\n   * @returns user data object with url\n   */\n  getUser(): Observable {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http.get(apiUrl + `users/${user}`, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Update User data with token in header\n   * @param userDetails \n   * @returns url to update user data\n   */\n    updateUser(userDetails: any): Observable {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http.put(apiUrl + `users/${user}`, userDetails, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Delete User with token in header\n   * @returns url to delete user by username\n   */\n  deleteUser(): Observable {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http.delete(apiUrl + `users/${user}`, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Add movie to favorites\n   * @param id Movie id\n   * @returns url to post movie id to users favorites\n   */\n  addFavorite(id: string): Observable {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http.post(apiUrl + `users/${user}/Movies/${id}`, id, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Delete movie from favorites\n   * @param id movie id\n   * @returns url with username and movie id\n   */\n  removeFavorite(id: string): Observable {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http.delete(apiUrl + `users/${user}/Movies/${id}`, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Non-typed response extraction\n   * @param res \n   * @returns \n   */\n  private extractResponseData(res: Response | Object ): any {\n    const body = res;\n    return body || {};\n  }\n\n  /**\n   * handleError function, returns messages in console \n   * @param error \n   * @returns throwerror\n   */\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Status Text: ${error.statusText}`);\n    }\n    return throwError(error.message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreDialogComponent.html":{"url":"components/GenreDialogComponent.html","title":"component - GenreDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/genre-dialog/genre-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-dialog\n            \n\n            \n                styleUrls\n                ./genre-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./genre-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/genre-dialog/genre-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/genre-dialog/genre-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/genre-dialog/genre-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    retrieve data from movie-card openGenreDialog()\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-genre-dialog',\n  templateUrl: './genre-dialog.component.html',\n  styleUrls: ['./genre-dialog.component.scss']\n})\n\n/**\n * This class displays moive genre name and description\n */\nexport class GenreDialogComponent implements OnInit {\n\n  constructor(\n    /**\n     * retrieve data from movie-card openGenreDialog()\n     */\n    @Inject(MAT_DIALOG_DATA)\n    public data: any) { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n{{data.name}}\n  \n    {{data.description}}\n  \n\n  Close\n\n\n    \n\n    \n                \n                    ./genre-dialog.component.scss\n                \n                .genre-details {\n    max-width: 50rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.name}}      {{data.description}}    Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                favorites\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteButton\n                            \n                            \n                                getMovies\n                            \n                            \n                                getUserFavs\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDetailsDialog\n                            \n                            \n                                openDirectorDialog\n                            \n                            \n                                openGenreDialog\n                            \n                            \n                                removeFavoriteButton\n                            \n                            \n                                setFaveStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteButton\n                        \n                    \n                \n            \n            \n                \naddFavoriteButton(id: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:66\n                \n            \n\n\n            \n                \n                    Add movie to user favorites array with addFavorite() with mat-icon\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie id\n\n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        favorites array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:41\n                \n            \n\n\n            \n                \n                    fetch movies from the API with getAllMovies()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFavs\n                        \n                    \n                \n            \n            \n                \ngetUserFavs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:52\n                \n            \n\n\n            \n                \n                    get FavoriteMovies array from user object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDetailsDialog\n                        \n                    \n                \n            \n            \n                \nopenDetailsDialog(title: string, description: string, image: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:143\n                \n            \n\n\n            \n                \n                    details-dialog opened when Synopsis button is clicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie title\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie description\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectorDialog\n                        \n                    \n                \n            \n            \n                \nopenDirectorDialog(name: string, bio: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:127\n                \n            \n\n\n            \n                \n                    director-dialog opened when Director button is clicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        director name\n\n                                    \n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        director bio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenreDialog\n                        \n                    \n                \n            \n            \n                \nopenGenreDialog(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:112\n                \n            \n\n\n            \n                \n                    genre-dialog opened when Genre button is clicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        genre name\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        genre description\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteButton\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteButton(id: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:83\n                \n            \n\n\n            \n                \n                    Remove movie from favorites array in user object with removeFavorite() with mat-icon\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie id\n\n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        favorites array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaveStatus\n                        \n                    \n                \n            \n            \n                \nsetFaveStatus(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:99\n                \n            \n\n\n            \n                \n                    Return true if movie id is in favorites and sets the icon to reflect status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        movie id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        true or false if id is in favorites array\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:23\n                        \n                    \n\n            \n                \n                    movies and favorites variables declared as arrays\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GenreDialogComponent } from '../genre-dialog/genre-dialog.component';\nimport { DirectorDialogComponent } from '../director-dialog/director-dialog.component';\nimport { DetailsDialogComponent } from '../details-dialog/details-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\n\n/**\n * This class displays movie info on cards\n */\nexport class MovieCardComponent implements OnInit {\n  /**\n   * movies and favorites variables declared as arrays\n   */\n  movies: any[] = [];\n  favorites: any[] = [];\n\n  constructor(\n    public fetchApiData: FetchApiDataService, \n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n    ) { }\n\n  // called when Angular is done creating the component\n  ngOnInit(): void {\n    this.getMovies();\n    this.getUserFavs();\n  }\n\n  /**\n   * fetch movies from the API with getAllMovies()\n   */\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log('getMovies() reached');\n      return this.movies;\n    });\n  }\n\n  /**\n   * get FavoriteMovies array from user object\n   */\n  getUserFavs(): void {\n    this.fetchApiData.getUser().subscribe((resp: any) =>{\n      this.favorites = resp.FavoriteMovies;\n      console.log('getUserFavs() reached');\n      return this.favorites\n    });\n  }\n\n  /**\n   * Add movie to user favorites array with addFavorite() with mat-icon\n   * @param id movie id\n   * @param title movie title\n   * @returns favorites array\n   */\n  addFavoriteButton(id: string, title: string): void {\n    this.fetchApiData.addFavorite(id).subscribe((resp: any) => {\n      this.favorites = resp.FavoriteMovies;\n      // message to user when icon is clicked\n      this.snackBar.open(`${title} has been added to your favorites`, 'OK', {\n        duration: 3000,\n      });\n      return this.favorites\n    });\n  }\n\n  /**\n   * Remove movie from favorites array in user object with removeFavorite() with mat-icon\n   * @param id movie id\n   * @param title movie title\n   * @returns favorites array\n   */\n  removeFavoriteButton(id: string, title: string): void {\n    this.fetchApiData.removeFavorite(id).subscribe((resp: any) => {\n      this.favorites = resp.FavoriteMovies;\n      // message to user when icon is clicked\n      this.snackBar.open(`${title} has been removed from your favorites`, 'OK', {\n        duration: 3000,\n      });\n      return this.favorites\n    });\n  }\n\n  /**\n   * Return true if movie id is in favorites and sets the icon to reflect status\n   * @param id movie id\n   * @returns true or false if id is in favorites array\n   */\n  setFaveStatus(id: any): any {\n    if (this.favorites.includes(id)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * genre-dialog opened when Genre button is clicked\n   * @param name genre name\n   * @param description genre description\n   */\n  openGenreDialog(name: string, description: string): void {\n    this.dialog.open(GenreDialogComponent, {\n      // pass genre data to genre dialog component\n      data: {\n        name: name, \n        description: description\n      }\n    } );\n  }\n\n  /**\n   * director-dialog opened when Director button is clicked\n   * @param name director name\n   * @param bio director bio\n   */\n  openDirectorDialog(name: string, bio: string): void {\n    this.dialog.open(DirectorDialogComponent, {\n      // pass director data to director dialog component\n      data: {\n        name: name, \n        bio: bio\n      }\n    } );\n  }\n\n  /**\n   * details-dialog opened when Synopsis button is clicked\n   * @param title movie title\n   * @param description movie description\n   * @param image movie image\n   */\n  openDetailsDialog(title: string, description: string, image: string ): void {\n    this.dialog.open(DetailsDialogComponent, {\n      // pass movie data to details dialog component\n      data: {\n        title: title,\n        description: description,\n        image: image\n      }\n    } );\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          {{movie.Title}}\n          \n            \n            favorite_border\n          \n          \n            favorite\n          \n          \n        \n        \n        \n          \n              Genre\n          \n          \n              Director\n          \n          \n              Synopsis\n          \n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                .movie-card {\n  margin: 2.5rem 4rem;\n}\n\n// .poster {\n//   max-width: 100%;\n// }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{movie.Title}}                                  favorite_border                                favorite                                                                    Genre                                  Director                                  Synopsis                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-bar/nav-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-bar\n            \n\n            \n                styleUrls\n                ./nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-bar/nav-bar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-bar/nav-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLogout\n                        \n                    \n                \n            \n            \n                \nuserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-bar/nav-bar.component.ts:26\n                \n            \n\n\n            \n                \n                    Logs out current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-bar/nav-bar.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\n\n/**\n * This class displays a navigation bar to movies, user profile, and logout\n */\nexport class NavBarComponent implements OnInit {\n\n  constructor(\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Logs out current user\n   */\n  userLogout () {\n    console.log('userLogout Reached')\n    // remove token and user from local storage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // send message to user that logout was successful\n    this.snackBar.open(`Logout was successful!`, 'OK', {\n      duration: 3000,\n    });\n  }\n}\n\n    \n\n    \n        \n  MyFlix\n  \n  \n    Movies\n    \n    Profile\n    \n    Logout\n    \n  \n\n    \n\n    \n                \n                    ./nav-bar.component.scss\n                \n                .navbar {\n  justify-content: space-between;\n}\n\nspan {\n  padding-right: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  MyFlix        Movies        Profile        Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, router: Router, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:28\n                            \n                        \n                \n                    \n                        defines the components input, userData object is passed to the API call in the LoginUser function\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:43\n                \n            \n\n\n            \n                \n                    This is the function responsible for sending the form inputs to the backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// This import will close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls\nimport { FetchApiDataService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// import Router module\nimport { Router } from '@angular/router';\n\n\n// component can be used in the html file as \n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\n\n/**\n * This class displays the user login form\n */\nexport class UserLoginFormComponent implements OnInit {\n  isLoading = false;\n  \n  /**\n   * defines the components input, userData object is passed to the API call in the LoginUser function\n   */\n  @Input() userData = { Username: '', Password: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public router: Router, \n    public snackBar: MatSnackBar\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function responsible for sending the form inputs to the backend\n   */\n  loginUser(): void {\n    this.isLoading = true;\n    this.fetchApiData.userLogin(this.userData).subscribe((response) => {\n      this.isLoading = false;\n    // This will close the modal on success\n    this.dialogRef.close();\n    // store username and token in local storage\n    localStorage.setItem('user', response.user.Username);\n    localStorage.setItem('token', response.token);\n    // navigate to the movie card view for all movies\n    this.router.navigate(['movies']);\n    console.log('loginUser success');\n    // message to user upon login\n    this.snackBar.open('Login was successful!', 'OK', {\n        duration: 2000\n    });\n    }, (response) => {\n      this.isLoading = false;\n      console.log('loginUser response 2');\n      this.snackBar.open(response, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Log In!\n  \n  \n    \n      \n        \n        \n        \n        \n      \n    \n  \n  \n      \n        Log In\n      \n  \n\n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log In!                                                                          Log In        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                favorites\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUserData\n                            \n                            \n                                filterFavorites\n                            \n                            \n                                getMovies\n                            \n                            \n                                getUserData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openProfileUpdateDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, router: Router, snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserData\n                        \n                    \n                \n            \n            \n                \ndeleteUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:94\n                \n            \n\n\n            \n                \n                    when \"Delete Account\" button is pressed it deletes the user from the API after confirmation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterFavorites\n                        \n                    \n                \n            \n            \n                \nfilterFavorites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:64\n                \n            \n\n\n            \n                \n                    filter Favorite movies from movies data returns user favorites to array\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        favorites array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:53\n                \n            \n\n\n            \n                \n                    gets Movies data and triggers filterFavorites\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:42\n                \n            \n\n\n            \n                \n                    get user object with username, email, birthday, and Favorite movies triggers getMovies()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:35\n                \n            \n\n\n            \n                \n                     gets user data upon page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfileUpdateDialog\n                        \n                    \n                \n            \n            \n                \nopenProfileUpdateDialog(username: string, email: string, birthday: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:79\n                \n            \n\n\n            \n                \n                    with \"Update Profile\" button is pressed, it passes data to UserProfileUpdateComponent for update\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birthday\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserProfileUpdateComponent } from '../user-profile-update/user-profile-update.component';\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\n\n/**\n * This class displays the user profile\n */\nexport class UserProfileComponent implements OnInit {\n  user: any = {};\n  favorites: any = [];\n  movies: any[] = [];\n  username = localStorage.getItem('user');\n\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public router: Router,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n  ) { }\n\n  /**\n   *  gets user data upon page load\n   */\n  ngOnInit(): void {\n    this.getUserData();\n  }\n\n  /**\n   * get user object with username, email, birthday, and Favorite movies triggers getMovies()\n   */\n  getUserData(): void {\n    this.fetchApiData.getUser().subscribe((resp: any) => {\n      this.user = resp;\n      this.getMovies();\n    });\n  }\n\n\n  /**\n   * gets Movies data and triggers filterFavorites\n   */\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      this.filterFavorites();\n    });\n  }\n\n  /**\n   * filter Favorite movies from movies data returns user favorites to array\n   * @returns favorites array\n   */\n  filterFavorites(): void {\n    this.movies.forEach((movie: any) => {\n      if (this.user.FavoriteMovies.includes(movie._id)) {\n        this.favorites.push(movie);\n      }\n    });\n    return this.favorites;\n  }\n    \n  /**\n   * with \"Update Profile\" button is pressed, it passes data to UserProfileUpdateComponent for update\n   * @param username \n   * @param email \n   * @param birthday \n   */\n  openProfileUpdateDialog(username: string, email: string, birthday: string): void {\n    // pass data to user profile update component\n    this.dialog.open(UserProfileUpdateComponent, {\n      data: {\n        username: username,\n        email: email,\n        birthday: birthday\n      },\n      width: '250px'\n    });\n  }\n\n  /**\n   * when \"Delete Account\" button is pressed it deletes the user from the API after confirmation\n   */\n  deleteUserData(): void {\n    let check = confirm(\n      'This will delete your profile! Are you sure you want to continue?'\n    );\n    if (check == true) {\n      this.fetchApiData.deleteUser().subscribe(() => {\n        localStorage.clear();\n        this.router.navigate(['welcome']);\n        this.snackBar.open('Profile deleted', 'OK', {\n          duration: 2000,\n        });\n      });\n    } else {\n      this.router.navigate(['users']);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{username}}'s Profile\n      \n      \n      \n        \n        Username: {{user.Username}}\n        \n        Email: {{user.Email}}\n        \n        Birthday: {{user.Birthday | date: \"dd/MM/yyyy\" || \"N/A\"}}\n        \n      \n      \n        \n          Update Profile\n        \n        \n          Delete Account\n        \n      \n    \n  \n \n  \n    {{username}}'s Favorite Movies\n    \n      \n        \n          \n            {{favorite.Title}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                .user-profile {\n  // display: flex;\n  flex-direction: column;\n  margin: 2rem;\n  align-items: center;\n}\n\n.user-content {\n  padding: 2rem 3rem;\n}\n\n.favorite-movies {\n  margin: 1rem 4rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}\\'s Profile                                  Username: {{user.Username}}                Email: {{user.Email}}                Birthday: {{user.Birthday | date: \"dd/MM/yyyy\" || \"N/A\"}}                                      Update Profile                          Delete Account                           {{username}}\\'s Favorite Movies                                        {{favorite.Title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileUpdateComponent.html":{"url":"components/UserProfileUpdateComponent.html","title":"component - UserProfileUpdateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileUpdateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile-update/user-profile-update.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile-update\n            \n\n            \n                styleUrls\n                ./user-profile-update.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile-update.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile-update/user-profile-update.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-profile-update/user-profile-update.component.ts:22\n                            \n                        \n                \n                    \n                        defines the components input, userData object is passed to the API call in the updateUser function\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile-update/user-profile-update.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile-update/user-profile-update.component.ts:38\n                \n            \n\n\n            \n                \n                    Update user data via the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-update/user-profile-update.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-update/user-profile-update.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-update/user-profile-update.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-update/user-profile-update.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-user-profile-update',\n  templateUrl: './user-profile-update.component.html',\n  styleUrls: ['./user-profile-update.component.scss']\n})\n\n/**\n * This class displays the user profile update input\n */\nexport class UserProfileUpdateComponent implements OnInit {\n  \n  /**\n   *  defines the components input, userData object is passed to the API call in the updateUser function\n   */\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: any,\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Update user data via the form \n   */\n  updateUser(): void {\n    this.fetchApiData.updateUser(this.userData).subscribe((response) => {\n      // This will close the modal on success\n    this.dialogRef.close(); \n    // get username from local storage\n    localStorage.setItem('user', response.Username)\n    console.log(response);\n    // message to user on update success\n    this.snackBar.open(`Update Successful!`, 'OK', {\n        duration: 3000\n    });\n    }, (response) => {\n      console.log(response);\n      this.snackBar.open(response, 'OK', {\n        duration: 2000\n      });\n    });\n    // reload page upon update\n    setTimeout(function () {\n      window.location.reload();\n     }, 3000);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Update Profile\n  \n  \n    \n      \n        \n        \n        \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n      \n        Update\n      \n  \n\n    \n\n    \n                \n                    ./user-profile-update.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Update Profile                                                                                                                  Update        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileUpdateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:26\n                            \n                        \n                \n                    \n                        defines the components input, userData object is passed to the API call in the registerUser function\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:39\n                \n            \n\n\n            \n                \n                    Send the form inputs to register user at the API\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// This import will close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls\nimport { FetchApiDataService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n// component can be used in the html file as \n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\n\n/**\n * This class displays the user registration form\n */\nexport class UserRegistrationFormComponent implements OnInit {\n  isLoading = false;\n\n  /**\n   * defines the components input, userData object is passed to the API call in the registerUser function\n   */\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Send the form inputs to register user at the API\n   */\n  registerUser(): void {\n      this.isLoading = true;\n      this.fetchApiData.userRegistration(this.userData).subscribe((response) => {\n      this.isLoading = false;\n      // This will close the modal on success!\n      this.dialogRef.close(); \n      console.log('registerUser successful');\n      // message to user when registration is a success\n      this.snackBar.open(`You are now registered and can log in!`, 'OK', {\n          duration: 3000\n      });\n      }, (response) => {\n        this.isLoading = false;\n        console.log(response);\n        this.snackBar.open(response, 'OK', {\n          duration: 2000\n        });\n      });\n    }\n}\n\n    \n\n    \n        \n  \n    Sign Up!\n  \n  \n    \n      \n        \n        \n        \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n      \n        Sign Up\n      \n  \n\n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up!                                                                                                                  Sign Up        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:37\n                \n            \n\n\n            \n                \n                    This will open the registration dialog when the Login button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:27\n                \n            \n\n\n            \n                \n                    This will open the registration dialog when the signup button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// import app components\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\n\n/**\n * This class displays the welcome screen with options to login or register\n */\nexport class WelcomePageComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This will open the registration dialog when the signup button is clicked  \n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n    // Assigning the dialog a width\n    width: '280px'\n    });\n  }\n\n  /**\n   * This will open the registration dialog when the Login button is clicked \n   */\n  openUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n    // Assigning the dialog a width\n    width: '280px'\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Welcome to myFlix!\n  \n  \n    \n      Sign Up\n    \n    \n      Login\n    \n  \n\n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                \n  .main-page {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 60px auto;\n\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to myFlix!              Sign Up              Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetailsDialogComponent', 'selector': 'app-details-dialog'},{'name': 'DirectorDialogComponent', 'selector': 'app-director-dialog'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileUpdateComponent', 'selector': 'app-user-profile-update'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/details-dialog/details-dialog.component.ts\n            \n            component\n            DetailsDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/director-dialog/director-dialog.component.ts\n            \n            component\n            DirectorDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            FetchApiDataService\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/genre-dialog/genre-dialog.component.ts\n            \n            component\n            GenreDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                src/app/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/user-profile-update/user-profile-update.component.ts\n            \n            component\n            UserProfileUpdateComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.8\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ^12.2.8\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlixAngularClient\n\nObjective\n\nBuild a client-side for an application called myFlix based on the existing server-side code REST API and database movie-api. \nA single page, responsive movie app built with Angular with routing and several interface views. \nUsers will be able to user the app whenever they want to read information about different movies or update their user information.\n\nUser Stories\n\nAs a user, I want to be able to receive information on movies, directors, and genres so that I can learn more about movies I’ve watched or am interested in.\nAs a user, I want to be able to create a profile so I can save data about my favorite movies.\n\nKey Features\n\nApp displays a welcome view where users are able to either log in or register an account.\nOnce authenticated, the user will now view all movies.\nOn the movie card, there are links to the movie genre, director, and movie synopsis, as well as one that adds the movie to their favorites. \nWhen a user clicks on any of these links, a dialog opens that displays more details.\nThere is user profile component that allows users to view/edit their profile.\nAngular's router is used to implement a route for the welcome view and user profile view.\nAngular Material is used to create a responsive simple UI design.\n\nTechnical Requirements\n\nThe application must be written in Angular (version 9 or later)\nThe application requires the latest version of Node.js and npm package\nThe application must contain user registration and login forms\nThe application must be designed using Angular Material\nThe application's codebase must contain comments using Typedoc\nThe project must contain technical documentation using JSDoc\nThe project must be hosted on GitHub Pages\n\nThis project was generated with Angular CLI version 12.2.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetailsDialogComponent\n\nDetailsDialogComponent\n\nAppModule -->\n\nDetailsDialogComponent->AppModule\n\n\n\n\n\nDirectorDialogComponent\n\nDirectorDialogComponent\n\nAppModule -->\n\nDirectorDialogComponent->AppModule\n\n\n\n\n\nGenreDialogComponent\n\nGenreDialogComponent\n\nAppModule -->\n\nGenreDialogComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserProfileUpdateComponent\n\nUserProfileUpdateComponent\n\nAppModule -->\n\nUserProfileUpdateComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://myflixdb2000.herokuapp.com/'\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
